"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load(
    "@io_bazel_rules_rust//rust:rust.bzl",
    "rust_binary",
    "rust_library",
    "rust_test",
)

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "restricted",  # GPL-3.0 from expression "GPL-3.0"
])

# Generated Targets

rust_library(
    name = "sc_finality_grandpa",
    srcs = glob(["**/*.rs"]),
    aliases = {
        "//vendor/substrate-prometheus-endpoint-0.8.0:substrate_prometheus_endpoint": "prometheus_endpoint",
    },
    crate_features = [
    ],
    crate_root = "src/lib.rs",
    crate_type = "lib",
    data = [],
    edition = "2018",
    proc_macro_deps = [
        "//vendor/derive_more-0.99.9:derive_more",
    ],
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "0.8.0",
    # buildifier: leave-alone
    deps = [
        "//vendor/finality-grandpa-0.12.3:finality_grandpa",
        "//vendor/fork-tree-2.0.0:fork_tree",
        "//vendor/futures-0.3.5:futures",
        "//vendor/futures-timer-3.0.2:futures_timer",
        "//vendor/log-0.4.11:log",
        "//vendor/parity-scale-codec-1.3.4:parity_scale_codec",
        "//vendor/parking_lot-0.10.2:parking_lot",
        "//vendor/pin-project-0.4.23:pin_project",
        "//vendor/rand-0.7.3:rand",
        "//vendor/sc-block-builder-0.8.0:sc_block_builder",
        "//vendor/sc-client-api-2.0.0:sc_client_api",
        "//vendor/sc-consensus-0.8.0:sc_consensus",
        "//vendor/sc-keystore-2.0.0:sc_keystore",
        "//vendor/sc-network-0.8.0:sc_network",
        "//vendor/sc-network-gossip-0.8.0:sc_network_gossip",
        "//vendor/sc-telemetry-2.0.0:sc_telemetry",
        "//vendor/serde_json-1.0.57:serde_json",
        "//vendor/sp-api-2.0.0:sp_api",
        "//vendor/sp-application-crypto-2.0.0:sp_application_crypto",
        "//vendor/sp-arithmetic-2.0.0:sp_arithmetic",
        "//vendor/sp-blockchain-2.0.0:sp_blockchain",
        "//vendor/sp-consensus-0.8.0:sp_consensus",
        "//vendor/sp-core-2.0.0:sp_core",
        "//vendor/sp-finality-grandpa-2.0.0:sp_finality_grandpa",
        "//vendor/sp-finality-tracker-2.0.0:sp_finality_tracker",
        "//vendor/sp-inherents-2.0.0:sp_inherents",
        "//vendor/sp-runtime-2.0.0:sp_runtime",
        "//vendor/sp-utils-2.0.0:sp_utils",
        "//vendor/substrate-prometheus-endpoint-0.8.0:substrate_prometheus_endpoint",
    ],
)
