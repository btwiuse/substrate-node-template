"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load(
    "@io_bazel_rules_rust//rust:rust.bzl",
    "rust_binary",
    "rust_library",
    "rust_test",
)

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "notice",  # MIT from expression "MIT"
])

# Generated Targets

# Unsupported target "ipc" with type "example" omitted

rust_library(
    name = "jsonrpc_ipc_server",
    srcs = glob(["**/*.rs"]),
    aliases = {
    },
    crate_features = [
    ],
    crate_root = "src/lib.rs",
    crate_type = "lib",
    data = [],
    edition = "2018",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "15.0.0",
    # buildifier: leave-alone
    deps = [
        "//vendor/jsonrpc-core-15.0.0:jsonrpc_core",
        "//vendor/jsonrpc-server-utils-15.0.0:jsonrpc_server_utils",
        "//vendor/log-0.4.11:log",
        "//vendor/parity-tokio-ipc-0.4.0:parity_tokio_ipc",
        "//vendor/parking_lot-0.10.2:parking_lot",
        "//vendor/tokio-service-0.1.0:tokio_service",
    ] + selects.with_or({
        # cfg(not(windows))
        (
            "@io_bazel_rules_rust//rust/platform:x86_64-apple-darwin",
            "@io_bazel_rules_rust//rust/platform:x86_64-unknown-linux-gnu",
        ): [
        ],
        "//conditions:default": [],
    }),
)
