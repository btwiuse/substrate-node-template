"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load(
    "@io_bazel_rules_rust//rust:rust.bzl",
    "rust_binary",
    "rust_library",
    "rust_test",
)

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "restricted",  # GPL-3.0 from expression "GPL-3.0"
])

# Generated Targets

rust_library(
    name = "sc_service",
    srcs = glob(["**/*.rs"]),
    aliases = {
        "//vendor/futures-0.1.29:futures": "futures01",
        "//vendor/futures-0.3.5:futures": "futures01",
        "//vendor/parity-scale-codec-1.3.4:parity_scale_codec": "codec",
        "//vendor/substrate-prometheus-endpoint-0.8.0:substrate_prometheus_endpoint": "prometheus_endpoint",
    },
    crate_features = [
        "db",
        "default",
        "wasmtime",
    ],
    crate_root = "src/lib.rs",
    crate_type = "lib",
    data = [],
    edition = "2018",
    proc_macro_deps = [
        "//vendor/derive_more-0.99.9:derive_more",
    ],
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "0.8.0",
    # buildifier: leave-alone
    deps = [
        "//vendor/exit-future-0.2.0:exit_future",
        "//vendor/futures-0.1.29:futures",
        "//vendor/futures-0.3.5:futures",
        "//vendor/futures-timer-3.0.2:futures_timer",
        "//vendor/hash-db-0.15.2:hash_db",
        "//vendor/jsonrpc-core-15.0.0:jsonrpc_core",
        "//vendor/jsonrpc-pubsub-15.0.0:jsonrpc_pubsub",
        "//vendor/lazy_static-1.4.0:lazy_static",
        "//vendor/log-0.4.11:log",
        "//vendor/parity-scale-codec-1.3.4:parity_scale_codec",
        "//vendor/parity-util-mem-0.7.0:parity_util_mem",
        "//vendor/parking_lot-0.10.2:parking_lot",
        "//vendor/pin-project-0.4.23:pin_project",
        "//vendor/rand-0.7.3:rand",
        "//vendor/sc-block-builder-0.8.0:sc_block_builder",
        "//vendor/sc-chain-spec-2.0.0:sc_chain_spec",
        "//vendor/sc-client-api-2.0.0:sc_client_api",
        "//vendor/sc-client-db-0.8.0:sc_client_db",
        "//vendor/sc-executor-0.8.0:sc_executor",
        "//vendor/sc-informant-0.8.0:sc_informant",
        "//vendor/sc-keystore-2.0.0:sc_keystore",
        "//vendor/sc-light-2.0.0:sc_light",
        "//vendor/sc-network-0.8.0:sc_network",
        "//vendor/sc-offchain-2.0.0:sc_offchain",
        "//vendor/sc-rpc-2.0.0:sc_rpc",
        "//vendor/sc-rpc-server-2.0.0:sc_rpc_server",
        "//vendor/sc-telemetry-2.0.0:sc_telemetry",
        "//vendor/sc-tracing-2.0.0:sc_tracing",
        "//vendor/sc-transaction-pool-2.0.0:sc_transaction_pool",
        "//vendor/serde-1.0.114:serde",
        "//vendor/serde_json-1.0.61:serde_json",
        "//vendor/slog-2.5.2:slog",
        "//vendor/sp-api-2.0.0:sp_api",
        "//vendor/sp-application-crypto-2.0.0:sp_application_crypto",
        "//vendor/sp-block-builder-2.0.0:sp_block_builder",
        "//vendor/sp-blockchain-2.0.0:sp_blockchain",
        "//vendor/sp-consensus-0.8.0:sp_consensus",
        "//vendor/sp-core-2.0.0:sp_core",
        "//vendor/sp-externalities-0.8.0:sp_externalities",
        "//vendor/sp-inherents-2.0.0:sp_inherents",
        "//vendor/sp-io-2.0.0:sp_io",
        "//vendor/sp-runtime-2.0.0:sp_runtime",
        "//vendor/sp-session-2.0.0:sp_session",
        "//vendor/sp-state-machine-0.8.0:sp_state_machine",
        "//vendor/sp-tracing-2.0.0:sp_tracing",
        "//vendor/sp-transaction-pool-2.0.0:sp_transaction_pool",
        "//vendor/sp-trie-2.0.0:sp_trie",
        "//vendor/sp-utils-2.0.0:sp_utils",
        "//vendor/sp-version-2.0.0:sp_version",
        "//vendor/substrate-prometheus-endpoint-0.8.0:substrate_prometheus_endpoint",
        "//vendor/tracing-0.1.19:tracing",
        "//vendor/wasm-timer-0.2.4:wasm_timer",
    ] + selects.with_or({
        # cfg(not(target_os = "unknown"))
        (
            "@io_bazel_rules_rust//rust/platform:x86_64-apple-darwin",
            "@io_bazel_rules_rust//rust/platform:x86_64-pc-windows-msvc",
            "@io_bazel_rules_rust//rust/platform:x86_64-unknown-linux-gnu",
        ): [
            "//vendor/directories-2.0.2:directories",
            "//vendor/tempfile-3.1.0:tempfile",
        ],
        "//conditions:default": [],
    }),
)
