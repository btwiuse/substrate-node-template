"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load(
    "@io_bazel_rules_rust//rust:rust.bzl",
    "rust_binary",
    "rust_library",
    "rust_test",
)

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "restricted",  # GPL-3.0 from expression "GPL-3.0"
])

# Generated Targets

rust_library(
    name = "sc_cli",
    srcs = glob(["**/*.rs"]),
    aliases = {
    },
    crate_features = [
        "wasmtime",
    ],
    crate_root = "src/lib.rs",
    crate_type = "lib",
    data = [],
    edition = "2018",
    proc_macro_deps = [
        "//vendor/derive_more-0.99.9:derive_more",
    ],
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "0.8.0",
    # buildifier: leave-alone
    deps = [
        "//vendor/ansi_term-0.12.1:ansi_term",
        "//vendor/atty-0.2.14:atty",
        "//vendor/bip39-0.6.0-beta.1:bip39",
        "//vendor/chrono-0.4.13:chrono",
        "//vendor/fdlimit-0.2.0:fdlimit",
        "//vendor/futures-0.3.5:futures",
        "//vendor/hex-0.4.2:hex",
        "//vendor/lazy_static-1.4.0:lazy_static",
        "//vendor/libp2p-0.28.1:libp2p",
        "//vendor/log-0.4.11:log",
        "//vendor/names-0.11.0:names",
        "//vendor/parity-scale-codec-1.3.4:parity_scale_codec",
        "//vendor/parity-util-mem-0.7.0:parity_util_mem",
        "//vendor/rand-0.7.3:rand",
        "//vendor/regex-1.3.9:regex",
        "//vendor/sc-client-api-2.0.0:sc_client_api",
        "//vendor/sc-informant-0.8.0:sc_informant",
        "//vendor/sc-keystore-2.0.0:sc_keystore",
        "//vendor/sc-network-0.8.0:sc_network",
        "//vendor/sc-service-0.8.0:sc_service",
        "//vendor/sc-telemetry-2.0.0:sc_telemetry",
        "//vendor/sc-tracing-2.0.0:sc_tracing",
        "//vendor/serde-1.0.114:serde",
        "//vendor/serde_json-1.0.57:serde_json",
        "//vendor/sp-blockchain-2.0.0:sp_blockchain",
        "//vendor/sp-core-2.0.0:sp_core",
        "//vendor/sp-keyring-2.0.0:sp_keyring",
        "//vendor/sp-panic-handler-2.0.0:sp_panic_handler",
        "//vendor/sp-runtime-2.0.0:sp_runtime",
        "//vendor/sp-state-machine-0.8.0:sp_state_machine",
        "//vendor/sp-utils-2.0.0:sp_utils",
        "//vendor/sp-version-2.0.0:sp_version",
        "//vendor/structopt-0.3.15:structopt",
        "//vendor/substrate-prometheus-endpoint-0.8.0:substrate_prometheus_endpoint",
        "//vendor/time-0.1.43:time",
        "//vendor/tokio-0.2.22:tokio",
        "//vendor/tracing-0.1.19:tracing",
        "//vendor/tracing-log-0.1.1:tracing_log",
        "//vendor/tracing-subscriber-0.2.11:tracing_subscriber",
    ] + selects.with_or({
        # cfg(not(target_os = "unknown"))
        (
            "@io_bazel_rules_rust//rust/platform:x86_64-apple-darwin",
            "@io_bazel_rules_rust//rust/platform:x86_64-pc-windows-msvc",
            "@io_bazel_rules_rust//rust/platform:x86_64-unknown-linux-gnu",
        ): [
            "//vendor/rpassword-4.0.5:rpassword",
        ],
        "//conditions:default": [],
    }) + selects.with_or({
        # cfg(target_family = "unix")
        (
            "@io_bazel_rules_rust//rust/platform:x86_64-apple-darwin",
            "@io_bazel_rules_rust//rust/platform:x86_64-unknown-linux-gnu",
        ): [
            "//vendor/nix-0.17.0:nix",
        ],
        "//conditions:default": [],
    }),
)
