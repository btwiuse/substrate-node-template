"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load(
    "@io_bazel_rules_rust//rust:rust.bzl",
    "rust_binary",
    "rust_library",
    "rust_test",
)

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "notice",  # MIT from expression "MIT OR Apache-2.0"
])

# Generated Targets

# Unsupported target "sha256" with type "bench" omitted

# Unsupported target "sha512" with type "bench" omitted

# Unsupported target "sha256sum" with type "example" omitted

# Unsupported target "sha512sum" with type "example" omitted

rust_library(
    name = "sha2",
    srcs = glob(["**/*.rs"]),
    aliases = {
    },
    crate_features = [
        "default",
        "std",
    ],
    crate_root = "src/lib.rs",
    crate_type = "lib",
    data = [],
    edition = "2018",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "0.9.1",
    # buildifier: leave-alone
    deps = [
        "//vendor/block-buffer-0.9.0:block_buffer",
        "//vendor/cfg-if-0.1.10:cfg_if",
        "//vendor/digest-0.9.0:digest",
        "//vendor/opaque-debug-0.3.0:opaque_debug",
    ] + selects.with_or({
        # cfg(any(target_arch = "x86", target_arch = "x86_64"))
        (
            "@io_bazel_rules_rust//rust/platform:x86_64-apple-darwin",
            "@io_bazel_rules_rust//rust/platform:x86_64-pc-windows-msvc",
            "@io_bazel_rules_rust//rust/platform:x86_64-unknown-linux-gnu",
        ): [
            "//vendor/cpuid-bool-0.1.2:cpuid_bool",
        ],
        "//conditions:default": [],
    }),
)

# Unsupported target "lib" with type "test" omitted
